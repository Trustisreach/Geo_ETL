x-airflow-common: &airflow-common
  environment:
    &airflow-common-env
    AIRFLOW_CORE_EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW_CORE_FERNET_KEY: ''
    AIRFLOW__CORE_DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW_CORE_LOAD_EXAMPLES: 'false'
    AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL: 5
    _AIRFLOW_DB_MIGRATE: 'true'
    _AIRFLOW_WWW_USER_CREATE: 'true'
    _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-admin}
    _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-admin}
  volumes:
    - ./data_lake:/opt/data_lake
    - ./data_lake/monitoring:/opt/data_lake/monitoring
    - ./synthetic_data:/opt/synthetic_data
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./scripts:/opt/airflow/scripts
    - ./dbt_click:/opt/dbt_click
  depends_on:
    postgres:
      condition: service_healthy
  networks:
    - all_in_one

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 5s
      retries: 5
    networks:
      - all_in_one

  clickhouse:
    image: yandex/clickhouse-server:latest
    environment:
      CLICKHOUSE_USER: admin
      CLICKHOUSE_PASSWORD: admin
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./clickhouse:/var/lib/clickhouse
      - ./data_lake:/opt/data_lake
      - ./docker_related_config.xml:/etc/clickhouse-server/config.d/docker_related_config.xml
    networks:
      - all_in_one

  af-webserver:
    <<: *airflow-common
    build:
      context: ./airflow_dockerfile
      dockerfile: Dockerfile.txt
    container_name: af-webserver
    environment:
      *airflow-common-env
    command: webserver
    ports:
      - "8080:8080"
    restart: always

  af-scheduler:
    <<: *airflow-common
    build:
      context: ./airflow_dockerfile
      dockerfile: Dockerfile.txt
    container_name: af-scheduler
    environment:
      *airflow-common-env
    command: scheduler
    restart: always

  af-worker:
    <<: *airflow-common
    build:
      context: ./airflow_dockerfile
      dockerfile: Dockerfile.txt
    container_name: af-worker
    environment:
      *airflow-common-env
    command: version
    restart: always

  airflow-init:
    <<: *airflow-common
    build:
      context: ./airflow_dockerfile
      dockerfile: Dockerfile.txt
    container_name: airflow-init
    command: version
    environment:
      <<: *airflow-common-env

  superset:
    container_name: superset
    build:
      context: ./superset_dockerfile
      dockerfile: Dockerfile.txt
    environment:
      - ADMIN_USERNAME=admin
      - ADMIN_EMAIL=admin@superset.com
      - ADMIN_PASSWORD=admin
    volumes:
      - ./superset_data:/app/superset_home
    ports: 
      - '8088:8088'
    depends_on:
      - postgres
    networks:
      - all_in_one

  jupyter:
    container_name: jupyter_notebook
    build:
      context: ./jupyter_dockerfile
      dockerfile: Dockerfile.txt
    ports:
      - "10000:8888"
      - "4040:4040"
    volumes:
      - ./synthetic_data:/home/jovyan/source
      - ./data_lake:/home/jovyan/data_lake
      - ./jupyter_notebook:/home/jovyan
    command: jupyter notebook --no-browser --NotebookApp.token='' --NotebookApp.password='' --ip='*' --allow-root
    environment:
      - GRANT_SUDO=yes
    user: root
    restart: always
    networks:
      - all_in_one
    
volumes:
  postgres-db-volume:
  clickhouse:

networks:
  all_in_one: